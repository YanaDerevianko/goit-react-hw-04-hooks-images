{"version":3,"sources":["services/api.js","components/App/App.styled.jsx","components/Searchbar/Searchbar.styled.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGallery/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/App/App.jsx","index.js"],"names":["fetchImages","imageName","page","a","axios","get","response","data","hits","AppDiv","styled","div","SearchbarHeader","header","SearchForm","form","SearchFormButton","button","SearchFormButtonLabel","span","SearchFormInput","input","Searchbar","onSearch","onSubmit","e","preventDefault","target","elements","value","type","name","autocomplete","autoFocus","placeholder","ImageGalleryLi","li","ImageGalleryImg","img","ImageGalleryItem","src","alt","onClick","ImgGallery","ul","ImageGallery","images","onSelect","map","id","largeImageURL","webformatURL","tags","ButtonLoadMore","Button","Overlay","ModalWindow","Modal","selectedImage","closeModal","handleKeyPress","useCallback","key","useEffect","window","addEventListener","document","body","className","removeEventListener","nodeName","Spinner","MyLoader","color","height","width","timeout","App","useState","setImageName","setImages","setPage","setSelectedImage","loading","setLoading","toggleLoaderVisible","prevLoading","scrollTo","top","documentElement","scrollHeight","behavior","then","prevState","error","length","position","ReactDOM","render","StrictMode","getElementById"],"mappings":"sSAEaA,EAAW,uCAAG,WAAOC,EAAWC,GAAlB,eAAAC,EAAA,4DACT,sCADS,SAEFC,IAAMC,IAAN,qCACSJ,EADT,iBAC2BC,EAD3B,gBADP,sCACO,yDAFE,cAEnBI,EAFmB,yBAKlBA,EAASC,KAAKC,MALI,2CAAH,wD,cCDXC,EAAUC,IAAOC,IAAX,iHCANC,EAAkBF,IAAOG,OAAV,qcAmBfC,EAAaJ,IAAOK,KAAV,kLAUVC,EAAmBN,IAAOO,OAAV,qaAkBhBC,EAAwBR,IAAOS,KAAV,iNAYrBC,EAAkBV,IAAOW,MAAV,+P,OCnDrB,SAASC,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAU1B,OACE,cAACX,EAAD,UACE,eAACE,EAAD,CAAYU,SARK,SAACC,GACpBA,EAAEC,iBACFH,EAASE,EAAEE,OAAOC,SAAS3B,UAAU4B,OACrCJ,EAAEE,OAAOC,SAAS3B,UAAU4B,MAAM,IAKhC,UACE,cAACb,EAAD,UACE,cAACE,EAAD,uBAGF,cAACE,EAAD,CACEU,KAAK,OACLC,KAAK,YACLC,aAAa,MACbC,WAAS,EACTC,YAAY,kCC9Bf,I,QAAMC,EAAiBzB,IAAO0B,GAAV,mDAGdC,EAAkB3B,IAAO4B,IAAV,sNCDfC,EAAmB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,IAAKC,EAAc,EAAdA,QAC3C,OACE,cAACP,EAAD,UACI,cAACE,EAAD,CACAK,QAAU,kBAAMA,EAAQF,EAAKC,IAC7BD,IAAKA,EACLC,IAAKA,OCRAE,EAAajC,IAAOkC,GAAV,4RCGVC,EAAe,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,OAAQC,EAAe,EAAfA,SACrC,OACE,cAACJ,EAAD,UACGG,EAAOE,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,cAAeC,EAAtB,EAAsBA,aAAcC,EAApC,EAAoCA,KAApC,OACV,cAAC,EAAD,CACEV,QAASK,EAETP,IAAKW,EACLV,IAAKW,EACLF,cAAeA,GAHVD,SCRFI,EAAiB3C,IAAOO,OAAV,+mBCCdqC,EAAS,SAAC,GAAiB,IAAfZ,EAAc,EAAdA,QACvB,OAAO,cAACW,EAAD,CAAgBX,QAASA,EAAzB,wBCHIa,EAAU7C,IAAOC,IAAV,yOAYP6C,EAAc9C,IAAOC,IAAV,6FCTjB,SAAS8C,EAAT,GAA6D,IAAD,IAA3CC,cAAiBlB,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,IAAOkB,EAAc,EAAdA,WAC7CC,EAAiBC,uBACrB,SAACpC,GACe,WAAVA,EAAEqC,KACJH,MAGJ,CAACA,IAGHI,qBAAU,WAGR,OAFAC,OAAOC,iBAAiB,UAAWL,GACnCM,SAASC,KAAKC,UAAY,WACnB,WACLJ,OAAOK,oBAAoB,UAAWT,GACtCM,SAASC,KAAKC,UAAY,MAE3B,CAACR,IAQJ,OACE,cAACL,EAAD,CAASb,QAPgB,SAACjB,GACA,QAAtBA,EAAEE,OAAO2C,UACXX,KAKF,SACE,cAACH,EAAD,UACE,qBAAKhB,IAAKA,EAAKC,IAAKA,Q,uBC/Bf8B,EAAU7D,IAAOC,IAAV,mDCEP6D,EAAW,WACtB,OACE,cAACD,EAAD,UACE,cAAC,IAAD,CACEzC,KAAK,YACL2C,MAAM,SACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,SCDV,SAASC,IACd,MAAkCC,mBAAS,MAA3C,mBAAO7E,EAAP,KAAkB8E,EAAlB,KACA,EAA4BD,mBAAS,IAArC,mBAAOhC,EAAP,KAAekC,EAAf,KACA,EAAwBF,mBAAS,GAAjC,mBAAO5E,EAAP,KAAa+E,EAAb,KACA,EAA0CH,mBAAS,MAAnD,mBAAOpB,EAAP,KAAsBwB,EAAtB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KAOMC,EAAsB,WAC1BD,GAAW,SAACE,GAAD,OAAkBA,MAwC/B,OAxBAvB,oBAAS,sBAAC,4BAAA5D,EAAA,yDACHF,EADG,iEAIaD,EAAYC,GAJzB,OAIF6C,EAJE,OAKRuC,IACAL,EAAUlC,GANF,2CAOP,CAAC7C,IAEJ8D,qBAAU,WAKR,GAJAC,OAAOuB,SAAS,CACdC,IAAKtB,SAASuB,gBAAgBC,aAC9BC,SAAU,WAER1F,EACF,IACED,EAAYC,EAAWC,GAAM0F,MAAK,SAAC9C,GACjCkC,GAAU,SAACa,GAAD,4BAAmBA,GAAnB,YAAiC/C,OAC3CuC,OAEF,MAAOS,OAEV,CAAC5F,IAGF,eAACO,EAAD,WACE,cAACa,EAAD,CAAWC,SAhCU,SAACtB,GACxBoF,IACAN,EAAa9E,MA+BV6C,EAAOiD,OAAS,GACf,cAAC,EAAD,CAAcjD,OAAQA,EAAQC,SAtCR,SAACP,EAAKC,GAChCyC,EAAiB,CAAE1C,MAAKC,WAuCrB0C,GAAW,cAAC,EAAD,IACXrC,EAAOiD,OAAS,GAAK,cAAC,EAAD,CAAQrD,QArDjB,WACf2C,IACCJ,EAAQ/E,EAAO,MAoDbwD,GACC,cAACD,EAAD,CAAOE,WA/CM,WACjBuB,EAAiB,OA8CkBxB,cAAeA,IAEhD,cAAC,IAAD,CAASsC,SAAS,iB,MCpExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACtB,EAAD,MAEFX,SAASkC,eAAe,W","file":"static/js/main.84cd9d6f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const fetchImages = async (imageName, page) => {\r\n  const API_key = \"18194330-67860245f678ffa703ae3a938&\";\r\n  const response = await axios.get(\r\n    `https://pixabay.com/api/?q=${imageName}&page=${page}&key=${API_key}&image_type=photo&orientation=horizontal&per_page=12`\r\n  );\r\n  return response.data.hits;\r\n};\r\n\r\n// const BASE_URL = \"https://pixabay.com/api/\";\r\n// const API_KEY = \"18194330-67860245f678ffa703ae3a938\";\r\n\r\n\r\n// axios.defaults.baseURL = BASE_URL;\r\n// axios.defaults.params = {\r\n//   key: API_KEY,\r\n//    per_page: 12,\r\n//   image_type: \"photo\",\r\n//   orientation: \"horizontal\",\r\n// };\r\n// export const fetchImages = async ({ page, imageName }) => {\r\n// return await axios.get(\"\", {\r\n//     params: { page, q: imageName},\r\n//   })\r\n//  };\r\n","import styled from \"@emotion/styled\";\r\nexport const AppDiv =  styled.div`\r\ndisplay: grid;\r\ngrid-template-columns: 1fr;\r\ngrid-gap: 16px;\r\npadding-bottom: 24px;\r\n`","import styled from \"@emotion/styled\";\r\nexport const SearchbarHeader = styled.header`\r\n  top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchForm = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;\r\n\r\nexport const SearchFormButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n  &:hover {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const SearchFormButtonLabel = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const SearchFormInput = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n  &::placeholder {\r\n    font: inherit;\r\n    font-size: 18px;\r\n  }\r\n`;\r\n","import { useEffect } from \"react\";\r\nimport {\r\n  SearchbarHeader,\r\n  SearchForm,\r\n  SearchFormButton,\r\n  SearchFormButtonLabel,\r\n  SearchFormInput,\r\n} from \"../Searchbar/Searchbar.styled\";\r\n\r\nexport function Searchbar({ onSearch }) {\r\n\r\n  \r\n  \r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    onSearch(e.target.elements.imageName.value);\r\n    e.target.elements.imageName.value=''\r\n  };\r\n\r\n  return (\r\n    <SearchbarHeader>\r\n      <SearchForm onSubmit={handleSearch}>\r\n        <SearchFormButton>\r\n          <SearchFormButtonLabel>Search</SearchFormButtonLabel>\r\n        </SearchFormButton>\r\n\r\n        <SearchFormInput\r\n          type=\"text\"\r\n          name=\"imageName\"\r\n          autocomplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n        />\r\n      </SearchForm>\r\n    </SearchbarHeader>\r\n  );\r\n};\r\n","import styled from \"@emotion/styled\";\r\nexport const ImageGalleryLi = styled.li`\r\n  border-radius: 2px;\r\n`;\r\nexport const ImageGalleryImg = styled.img`\r\n  width: 100%;\r\n  height: 260px;\r\n  object-fit: cover;\r\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n  }\r\n`;\r\n","import {ImageGalleryLi, ImageGalleryImg} from './ImageGalleryItem.styled';\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ImageGalleryItem = ({ src, alt, onClick }) => {\r\n  return (\r\n    <ImageGalleryLi>\r\n        <ImageGalleryImg \r\n        onClick ={() => onClick(src, alt)}\r\n        src={src} \r\n        alt={alt}/>\r\n    </ImageGalleryLi>\r\n  );\r\n};\r\nImageGalleryItem.propTypes = {\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\nexport const ImgGallery = styled.ul`\r\ndisplay: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 0;\r\n  margin-bottom: 0;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n\r\n`","import { ImageGalleryItem } from \"./ImageGalleryItem/ImageGalleryItem\";\r\nimport { ImgGallery } from \"./ImageGallery.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const ImageGallery = ({ images, onSelect }) => {\r\n  return (\r\n    <ImgGallery>\r\n      {images.map(({ id, largeImageURL, webformatURL, tags }) => (\r\n        <ImageGalleryItem\r\n          onClick={onSelect}\r\n          key={id}\r\n          src={webformatURL}\r\n          alt={tags}\r\n          largeImageURL={largeImageURL}\r\n        />\r\n      ))}\r\n    </ImgGallery>\r\n  );\r\n};\r\n\r\nImageGallery.propTypes = {\r\n  onSelect: PropTypes.func.isRequired,\r\n  images: PropTypes.array.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\n\r\nexport const ButtonLoadMore = styled.button`\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  width: 180px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n  &:hover,\r\n  &:focus {\r\n    background-color: #303f9f;\r\n  }\r\n`;\r\n","import { ButtonLoadMore } from \"./Button.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport const Button = ({ onClick }) => {\r\n  return <ButtonLoadMore onClick={onClick}>LOAD MORE</ButtonLoadMore>;\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};","import styled from \"@emotion/styled\";\r\nexport const Overlay = styled.div`\r\nposition: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`\r\nexport const ModalWindow = styled.div`\r\nmax-width: calc(100vw - 48px);\r\nmax-height: calc(100vh - 24px);\r\n`","import { useEffect, useCallback } from \"react\";\r\nimport { Overlay, ModalWindow } from \"./Modal.styled\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport function Modal({ selectedImage: { src, alt }, closeModal }) {\r\n  const handleKeyPress = useCallback(\r\n    (e) => {\r\n      if (e.key === \"Escape\") {\r\n        closeModal();\r\n      }\r\n    },\r\n    [closeModal]\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"keydown\", handleKeyPress);\r\n    document.body.className = \"noScroll\";\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", handleKeyPress);\r\n      document.body.className = \"\";\r\n    };\r\n  }, [handleKeyPress]);\r\n\r\n  const handleOverlayClick = (e) => {\r\n    if (e.target.nodeName !== \"IMG\") {\r\n      closeModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Overlay onClick={handleOverlayClick}>\r\n      <ModalWindow>\r\n        <img src={src} alt={alt} />\r\n      </ModalWindow>\r\n    </Overlay>\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  selectedImage: PropTypes.object,\r\n};\r\n","import styled from \"@emotion/styled\";\r\nexport const Spinner = styled.div`\r\n  text-align: center;\r\n`;","import Loader from \"react-loader-spinner\";\r\nimport { Spinner } from \"./Loader.styled\";\r\n\r\nexport const MyLoader = () => {\r\n  return (\r\n    <Spinner>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"Orange\"\r\n        height={100}\r\n        width={100}\r\n        timeout={7000}\r\n      />\r\n    </Spinner>\r\n  );\r\n};\r\n","import { useState, useEffect } from \"react\";\nimport toast, { Toaster } from \"react-hot-toast\";\nimport { fetchImages } from \"../../services/api\";\nimport { AppDiv } from \"./App.styled\";\nimport { Searchbar } from \"../Searchbar/Searchbar\";\nimport { ImageGallery } from \"../ImageGallery/ImageGallery\";\nimport { Button } from \"../Button/Button\";\nimport { Modal } from \"../Modal/Modal\";\nimport { MyLoader } from \"../Loader/Loader\";\n\nexport function App() {\n  const [imageName, setImageName] = useState(null);\n  const [images, setImages] = useState([]);\n  const [page, setPage] = useState(1);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const loadMore = () => {\n    toggleLoaderVisible();\n     setPage(page + 1);\n  };\n\n  const toggleLoaderVisible = () => {\n    setLoading((prevLoading) => !prevLoading);\n  };\n  const closeModal = () => {\n    setSelectedImage(null);\n  };\n\n  const handleSelectedImage = (src, alt) => {\n    setSelectedImage({ src, alt });\n  };\n\n  const handleFormSubmit = (imageName) => {\n    toggleLoaderVisible();\n    setImageName(imageName);\n    \n  };\n\n  useEffect(async () => {\n    if (!imageName) {\n      return;\n    }\n    const images = await fetchImages(imageName);\n    toggleLoaderVisible();\n    setImages(images);\n  }, [imageName]);\n\n  useEffect(() => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n    if (imageName) {\n      try {\n        fetchImages(imageName, page).then((images) => {\n          setImages((prevState) => [...prevState, ...images]);\n          toggleLoaderVisible();\n        });\n      } catch (error) {}\n    }\n  }, [page]);\n\n  return (\n    <AppDiv>\n      <Searchbar onSearch={handleFormSubmit} />\n      {images.length > 0 && (\n        <ImageGallery images={images} onSelect={handleSelectedImage} />\n      )}\n      {loading && <MyLoader />}\n      {images.length > 0 && <Button onClick={loadMore} />}\n      {selectedImage && (\n        <Modal closeModal={closeModal} selectedImage={selectedImage} />\n      )}\n      <Toaster position=\"top-right\" />\n    </AppDiv>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './components/App/App';\nimport './index.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}